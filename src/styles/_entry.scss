// VAR
// Palette Color
$main-color: #0076ca;
$second-color: #004679;
$neutro-color: #b6b6b6;
$grey-color: #dfdfdf;
// Color - Background
$bg-neutro: #fff;
// Color - Text
$text-color-primary: #000;
$text-color-secondary: #fff;
// Templates
$padding-default: 2rem;
$padding-1: 1.2rem;
$padding-2: 0.8rem;
$margin-default: 2rem;
$border: 1px solid $neutro-color;
$border-radius: .3rem;
$shadow-range: 1rem;
$drop-shadow-range: .4rem;
$shadow-color: rgba(0, 0, 0, .3);
$gap: 2rem;
$gap-1: 1.25rem;
$transition-time: .3s;
$transition: all $transition-time ease-in-out;
// UTIL
@mixin flex($isColumn: false) {
    display: flex;
    @if $isColumn {
        @extend .flex-column;
    }
}

@mixin center {
    @include flex;
    align-items: center;
    justify-content: center;
}

@mixin shadow($type: "filter", $positionX: 0, $positionY: 0) {
    @if $type=="box" {
        box-shadow: $positionX $positionY $shadow-range $shadow-color;
    }
    @else if $type=="filter" {
        filter: drop-shadow($positionX $positionY $drop-shadow-range $shadow-color);
    }
}

@mixin text-overflow() {
    text-overflow: ellipsis;
}

@mixin border($direction, $color: $neutro-color) {
    @if $direction=="top" {
        border-top: 1px solid $color;
    }
    @else if $direction=="left" {
        border-left: 1px solid $color;
    }
    @else if $direction=="right" {
        border-right: 1px solid $color;
    }
    @else if $direction=="bottom" {
        border-bottom: 1px solid $color;
    }
}

@mixin scroll($type: "", $value: auto) {
    @if $type=="y" {
        overflow-y: $value;
    }
    @else if $type=="x" {
        overflow-x: $value;
    }
    @else {
        overflow: hidden;
    }
}

@function get-text-color($bg, $color: null) {
    $red: red($bg);
    $green: green($bg);
    $blue: blue($bg);
    $yiq: (($red * 299) + ($green * 587) + ($blue * 114)) / 1000;
    $default-color: if($yiq > 128, $text-color-primary, $text-color-secondary);
    $color-applied: if($color, $color, $default-color);
    $adjusted-color: if($yiq > 128, darken($color-applied, 20%), lighten($color-applied, 20%));
    @return $adjusted-color;
}

.flex-column {
    flex-direction: column;
}

.header {
    @include flex;
    justify-content: space-between;
    align-items: center;
    background-color: $main-color;
    color: get-text-color($main-color);
    height: 15px;
}

// BASE
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: "Inter", sans-serif, system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue';
}

html {
    font-size: 62.5%;
}

button,
a,
input,
select,
textarea {
    outline: none;
    background: transparent;
    text-decoration: none;
    border: none;
    color: get-text-color($bg-neutro);
}

button,
a {
    cursor: pointer;
}

body {
    @include flex(true);
    font-size: 1.6rem;
    width: 100vw;
    height: 100vh;
    background-color: $bg-neutro;
    color: get-text-color($bg-neutro);
    &>* {
        height: 100%;
        overflow: hidden;
    }
}

// LIST
[list-content] {
    &:has([list-type="vertical"]) {
        @include scroll("y");
    }
    &:has([list-type="horizontal"]) {
        @include scroll("x");
    }
}

[list-type="vertical"] {
    @include flex();
    min-width: 100%;
}

[list-type="horizontal"] {
    @include flex(auto);
    min-width: 100%;
}

// LINE
[line] {
    background-color: $neutro-color;
}

[line="vertical"] {
    height: 1px;
    margin-block: $margin-default;
    &[line-width="margin"] {
        margin-inline: $margin-default;
        width: calc(100% - ($margin-default * 2));
    }
    &[line-width="filled"] {
        width: 100%;
    }
}

[line="horizontal"] {
    width: 1px;
    margin-inline: $margin-default;
    &[line-height="margin"] {
        margin-block: $margin-default;
        height: calc(100% - ($margin-default * 2));
    }
    &[line-height="filled"] {
        height: 100%;
    }
}

// ICON
[icon-parent] {
    @include flex;
    align-items: center;
}

[icon] {
    position: relative;
    font-size: 2rem;
    &:before {
        vertical-align: -0.4rem !important;
    }
}

// MODEL WINDOW
[model-window-parent] {
    position: relative;
    &:has([model-window="enabled"]) {
        &:after {
            position: absolute;
            content: '';
            top: 0;
            left: 0;
            bottom: 0;
            right: 0;
            background-color: rgba(0, 0, 0, .3);
        }
    }
}

[model-window] {
    position: absolute;
    width: 50%;
    height: 50%;
    pointer-events: none;
    z-index: 100;
    background-color: $bg-neutro;
    resize: both;
    @include scroll("x");
    @include scroll("y");
    @include shadow("filter", 10px, 10px);
    .header {
        cursor: move;
    }
}

[model-window="enabled"] {
    display: block;
    pointer-events: all;
}

[model-window="disabled"] {
    display: none;
    pointer-events: none;
}

// ABA
[aba-parent] {
    @include flex();
    min-width: 100%;
}

[aba] {
    @include center;
    justify-content: space-between;
    padding-inline: $padding-1;
    gap: $padding-1;
    width: fit-content;
    width: -moz-fit-content;
    max-width: 17rem;
    white-space: nowrap;
    @include border("right");
    @extend [icon-parent];
    cursor: pointer;
    transition: $transition;
    &.active {
        cursor: default;
    }
    .aba-title {
        @include scroll;
        @include text-overflow;
    }
}

// HEADER
header {
    height: min(10%, 12rem);
    @include flex;
    align-items: center;
    justify-content: space-between;
    padding-inline: $padding-default;
    background-color: $main-color;
    color: get-text-color($main-color);
    .logo {
        font-weight: 300;
        font-size: 1.3rem;
    }
}

// MAIN
main {
    @include flex;
    background-color: $bg-neutro;
    color: get-text-color($bg-neutro);
    &>* {
        width: 100%;
    }
}

// SIDE BAR
.side-bar {
    white-space: nowrap;
    width: max-content;
    min-width: 17rem;
    height: 100%;
    @include border("right");
    [list] {
        height: auto;
        &>* {
            cursor: pointer;
        }
        .item {
            @include flex;
            padding-inline: $padding-default;
            gap: $gap-1;
            height: 6rem;
            transition: $transition;
            &:hover {
                background-color: $neutro-color;
            }
            .item-title {
                font-size: 1.3rem;
            }
        }
    }
}

// PANEL
.panel {
    @include flex(true);
    @include scroll("x", hidden);
    &>* {
        width: 100%;
        height: 100%;
    }
    .aba-container {
        height: min(7.5%, 5rem);
        width: 100%;
        @include border("bottom");
        .abas {
            height: 100%;
            .aba-title {
                font-size: 1.3rem;
            }
        }
    }
    .panel-control {
        @include scroll("y");
    }
}

[panel] {
    @include flex(true);
    width: 100%;
    min-height: 100%;
    display: none;
    font-size: 1.4rem;
    @include scroll("y");
    @include scroll("x", hidden);
    &:has([table]) {
        height: 100% !important;
        @include scroll("y", hidden);
    }
    input[type="text"] {
        @include border("bottom");
    }
    button:hover,
    a:hover {
        background-color: $neutro-color;
    }
    &.active {
        display: flex;
    }
}

// TABLE
table,
td,
th,
tr {
    border: $border;
}

[table-parent] {
    height: 100%;
    width: 100%;
}

[table] {
    max-height: 100%;
    min-width: 100%;
    border-radius: $border-radius;
    border-collapse: collapse;
    @include scroll("y", hidden);
    @include scroll("x");
    [table-header] {
        background-color: $grey-color;
    }
    [table-data] {
        position: relative;
        min-height: 100%;
        @include scroll("y");
        tr {
            cursor: pointer;
        }
    }
    th {
        position: relative;
        width: fit-content;
        width: -moz-fit-content;
        resize: horizontal;
        @include scroll("x", hidden);
        &::-webkit-resizer {
            height: calc(100% + ($padding-2 * 2));
            width: 8px;
            cursor: ew-resize;
        }
    }
    td>* {
        cursor: text !important;
    }
    td,
    th {
        padding: $padding-2;
        text-align: center;
        white-space: nowrap;
        @include scroll("x", hidden);
        @include text-overflow;
    }
}